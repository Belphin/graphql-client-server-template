version: "3"

services:
  server:
    container_name: server
    build: ./server
    ports:
      - "$SERVER_PORT:$SERVER_PORT"
    command: bash -c "python manage.py runserver 0.0.0.0:$SERVER_PORT"
    working_dir: /var/www/server
    volumes:
      - ./server:/var/www/server
    environment:
      - DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE
    env_file:
      - .env

  database:
    image: mysql:8.0
    container_name: ${DATABASE_HOST}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "$DATABASE_PORT:3306"
    volumes:
      - ./mysql_data:/var/lib/mysql

  client:
    container_name: client
    build: ./client
    working_dir: /var/www/client/
    ports:
      - "$CLIENT_PORT:$CLIENT_PORT"
    volumes:
      - ./server/:/var/www/server
      - ./client/:/var/www/client/
    environment:
      - REACT_APP_GRAPHQL_ENDPOINT=${REACT_APP_GRAPHQL_ENDPOINT}

  celery:
    build:
      context: ./server/
      dockerfile: Dockerfile
    container_name: celery
    working_dir: /var/www/server
    volumes:
      - ./server:/var/www/server
    command: celery -A server worker -l info
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_NAME=${DATABASE_NAME}
    depends_on:
      - database
